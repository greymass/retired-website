import React, { Component } from 'react';

import { injectIntl } from 'gatsby-plugin-intl';
import { Container, Divider, Grid, Header, List, Segment } from "semantic-ui-react"

import Layout from '../components/layout';
import TransactionHandlersVoteproducer from '../components/support/transactionHandlers/voteProducer';
import SharedHeader from '../components/shared/sections/header';
import SharedElementsChainLogo from '../components/shared/elements/chainLogo';
import SharedElementsExplorerLink from '../components/shared/elements/explorerLink';

import supportStyles from './support.module.css';
import SEO from '../components/shared/seo';

const bps = [
  {
    network: 'eos',
    producer: 'teamgreymass',
    proxy: 'greymassvote',
  },
  // {
  //   network: 'fio',
  //   producer: 'teamgreymass',
  // },
  {
    network: 'instar',
    producer: 'teamgreymass',
  },
  {
    network: 'lynx',
    producer: 'teamgreymass',
  },
  {
    network: 'telos',
    producer: 'teamgreymass',
  },
  {
    network: 'wax',
    producer: 'teamgreymass',
  },
]

class Index extends Component {
  render() {
    const { location, intl } = this.props;

    return (
      <Layout location={location}>
        <SEO
          lang={intl.locale}
          keywords={['support us', 'greymass']}
          title="Support Us"
        />
        <SharedHeader
          title={intl.formatMessage({ id: 'support_header' })}
          paragraph={intl.formatMessage({ id: 'support_paragraph' })}
        />
        <div className={supportStyles.container}>
          <Container>
            <Grid stackable>
              <Grid.Row centered>
                <Grid.Column computer={12} tablet={14} mobile={16}>
                  <TransactionHandlersVoteproducer
                    bps={bps}
                  />
                </Grid.Column>
              </Grid.Row>
              <Grid.Row columns={1}>
                <Grid.Column
                  style={{
                    padding: '40px 0 0'
                  }}
                  textAlign="center"
                >
                  <Header size="small">
                    Greymass on EOSIO
                    <Header.Subheader>
                      If you would like to support the work we do, please consider voting for us on one of the networks:
                    </Header.Subheader>
                  </Header>
                </Grid.Column>
              </Grid.Row>
              <Grid.Row
                columns={bps.length}
                style={{
                  padding: '0 0 40px'
                }}
              >
                {bps.map(bp => (
                  <Grid.Column>
                    <Segment
                      color="blue"
                      stacked
                      textAlign="center"
                    >
                      <SharedElementsChainLogo
                        chain={bp.network}
                        size="mini"
                      />
                      <Header
                        size="small"
                        style={{ margin: 0 }}
                      >
                        {bp.network.toUpperCase()}
                        <Header.Subheader>
                          Block Producer
                        </Header.Subheader>
                      </Header>
                      <List>
                        <List.Item>
                          <strong>
                            <SharedElementsExplorerLink
                              chain={bp.network}
                              type="account"
                              value={bp.producer}
                            />
                          </strong>
                        </List.Item>
                      </List>
                    </Segment>
                  </Grid.Column>
                ))}
              </Grid.Row>
              <Grid.Row
                columns={1}
                style={{
                  padding: '0 0 40px'
                }}
              >
                <Grid.Column>
                  <Divider horizontal>Continue on to learn more</Divider>
                </Grid.Column>
              </Grid.Row>
              <Grid.Row centered>
                <Grid.Column width={10}>
                  <Header>
                    What are block producers and why are they paid?
                  </Header>
                  <p>
                    Block producers are the entities that validate the network, ensuring that transactions are received, propagated, and confirmed. In many networks, block producers also serve important governance roles.
                  </p>
                  <p>
                    Block producers are paid through rewards generated by the network— either through inflation or transaction fees. These rewards form the core of the business model that keeps block producers in business. Token holders vote on which entities to elect as BPs, and those that receive the most votes are paid as validators. BPs are incentivized to keep the network running as smoothly and efficiently as possible, since they can be un-elected by token holders at any time.
                  </p>
                </Grid.Column>
              </Grid.Row>
              <Grid.Row centered>
                <Grid.Column width={10}>
                  <Header>
                    What is the Greymass Proxy?
                  </Header>
                  <p>
                    On EOSIO networks, there are two ways to vote. Token holders can vote directly for block producers, or they can proxy their vote to another account. Using a proxy allows a user to lend the weight of their voting power to another account, who can choose who to vote for. This entire process is non-custodial and reversible at any time. Any user who proxies their vote to another account retains full control of their tokens— they simply allow the other account to direct their vote.
                  </p>
                  <p>​
                    The Greymass Proxy is a proxy account created by our team to vote for block producers who we believe add the most value to the network, often in under-appreciated areas. As active members of the EOSIO community, we pay close attention to the various initiatives and projects that BPs take on. This puts us in a great position to evaluate which block producers are most deserving of a vote.
                  </p>
                  <p>
                    The Greymass Proxy offers token holders a way to support the overall health of the network by outsourcing BP voting to an engaged and knowledgable Greymass team.
                  </p>
                </Grid.Column>
              </Grid.Row>
              <Grid.Row centered>
                <Grid.Column width={10}>
                  <Header>
                    Use your own wallet to vote
                  </Header>
                  <p>
                    You can use any EOSIO wallet to cast a vote. Many wallets have a voting interface built into them directly. Others, like Scatter, can be used in conjunction with web interfaces like Bloks.io or EOS Authority.
                  </p>
                  <p>
                    To vote for us, simply find the <strong>teamgreymass</strong> account on your wallet’s voting portal and cast a vote for us. We appreciate your support!
                  </p>
                </Grid.Column>
              </Grid.Row>
              <Grid.Row centered>
                <Grid.Column width={10}>
                  <Header>
                    Have a question or want to talk with our team?
                  </Header>
                  <p>
                    If you’d like to reach us, feel free to shoot an email to our whole team at team@greymass.com
                  </p>
                  <p>
                    You can also find us on Telegram, Github, and Twitter.
                  </p>
                  <p>
                    If you’re specifically interested in one of our projects, we also have Telegram groups for Anchor wallet, Anchor developers, and Greymass Fuel.
                  </p>
                  <p>                    ​
                    We look forward to hearing from you!
                  </p>
                </Grid.Column>
              </Grid.Row>
            </Grid>
          </Container>
        </div>
      </Layout>
    )
  }
}

export default injectIntl(Index);
